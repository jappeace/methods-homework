#+TITLE: Where are the micro worlds?
#+OPTIONS: toc:nil num:nil
#+LATEX_HEADER: \usepackage{natbib}

# CLEARED
In the early days of AI there was an idea of AI development called
"micro worlds".
In a strongly recommended book cite:book_copeland,
the authors explained that in the 1970's there used to be programs that 
could do some very interesting things for their time.
One program, Shrdlu could for example understand language commands and execute
them on its environment cite:winograd1971procedures .
Something which is only getting introduced to consumers today
with technologies such as Siri or Google now.
Another program could parse 2d scenes and make a 3d representation of it
cite:waltz1971.
Something which is in the present day still an active research topic.
Could you imagine how impressive this must have been in the 1970's?
The programs I'm talking about had one thing in common, micro worlds.
But in the last 20 years or so no more papers have appeared about 
programs that use the micro world approach.
What happened to this approach?
Why did people stop doing research into it?
In this paper we'll explore firstly what the micro world is,
then we'll look at some of the criticism that let to its eventual demise,
with that criticism in mind we'll try to explore some possible use cases.

* What is a micro world?
# CLEARED
In this chapter we'll describe what a micro world is.
First by example, and then later we'll define it more thoroughly.
This chapter will also indicate the scope of this paper, and will put
the reader on the same line when talking about micro worlds.

# CLEARED
One of the most impressive micro world programs was called Shrdlu,
invented by Terry Winograd cite:winograd1971procedures.    
This program controlled a robotic arm that could move blocks from one place                                                            
to another. It also had an eye to observe its world with.
The blocks and the robotic arm were virtual and eye were virtual.
You could interact with Shrdlu trough a command line.
The purpose of the program was to understand natural language, and it did
this very well.
It could for example deduce what reference words meant such as "it",
do semantical deduction (can the table pick up blocks?)
and understand concepts such as ownership.
Conversations with Shrdlu appeared very naturally.
# TODO: insert reference to conversation? Add image of the world?

# TODO: discuss waltz's program? see how its different?
# TODO: why did people get excited?

# CLEARED
The term /micro world/ was coined in an internal MIT memo in 1970 quoted                                                         
in cite:dreyfus1981micro: "Each model - or `micro world' as we shall call it -                                                         
is very schematic; it talks about a fairyland in which things are so simplified                                                        
that almost every statement about them would be literally false if asserted about                                                      
in the real world."                                                
Now this definition may already shed some light on the possible criticisms
on micro worlds, but we'll discuss that more thoroughly later.
It should be noted that this definition came from an internal memo in MIT
never meant for publication.

# CLEARED
Lets first make a less strongly worded definition of the term micro world:
A micro world is an artificially constructed world for conducting AI research.
The AI program (or agent) experiences the world trough senses to avoid logical
omniscience.
There is strict separation between world objects, and agent's believes.
Information has to pass trough senses to reach the agent.
It has an internal deliberation system separate of the micro world.
The AI program usually has a way to interact with the micro world, in case
of Shrdlu it was a robot arm.
A micro world does not need to be compatible with the real world.

# CLEARED
So you may wonder,
what is the difference between a micro world and a simulation?
A micro world is a sort of simulation,
but its important to remember that things represented in a micro world don't
necessarily need to be true in the real world.
A simulation however wants to try to be as close to the real world as possible
cite:wiki_simulation.

# CLEARED
Some sources argue that micro world became expert systems
cite:micro_world_is_expert.
But in our definition this is not the case.
The difference between expert system and micro worlds is that
expert systems may have an internal simulation of the world,
but this isn't a micro world.
Micro worlds may not map directly to the real world but simulations
do want to do this.
Another difference is that an expert system says nothing about the agent
having senses, or trying to separate beliefs from the world.
Honing goes further cite:honing1993micro stating that micro world are
the anti thesis of expert systems.
Expert systems are rule based systems which encode all their knowledge as rules.
These get so complex that humans no longer can understand how all these rules
are supposed to interact.
Micro worlds are however supposed to make interactions oversee-able and
understandable for humans.
Micro world are supposed to /find/ interactions of rules,
whereas expert systems are supposed to /describe/ them.

* Criticism on the micro world approach
# CLEARED
Now we'll discuss criticism on the micro world approach with help of Dreyfus
cite:dreyfus1981micro and Wingorad cite:winograd1974.

# CLEARED
As always lets start with Shrdlu,
why didn't this became the core technology of Siri or Google Now?
Well first of all Wingorad gave up devlopment in 1974.
Its kind of important for a software project to succeed to have people
working on it.
He stated that developing the system just became too complex.
He proposes two potential ways of dealing with this:
1. Firstly create better abstractions and do things in a more modular way.
   Of course this is a non trivial task,
   especially considering the tools he was working with at the time.
2. Secondly was a description of something which we today would call machine learning:
   "The dream is that we can start with a minimum of structure, 
   then provide masses of data and expect the program to build its own 
   complexities" cite:winograd1974 (end of page 13).
In a later paragraph (1.2),
he lists several problems would all mostly have been solved by a type system.
Lisp is dynamically typed.
So why didn't he use a better language?
There wasn't anything else, C was just invented.
A year before that ML (which had that type system he wanted),
but a year is not a long time for language adoption,
besides it would've been experimental and buggy.
We thought it was interesting to read some researcher from several decades ago
describing problems and desires that are now subjects of active research. 

# CLEARED
Dreyfus attacks Shrdlu from a different direction. He says that the
biggest issue not only Shrdlu had but all micro worlds was there limited
domain in the first place.
Take for example the concept of owning.
In Shrdlu's mind just a flag is set whether an object is owned by someone.
When later inquired about it he will just check the flag.
Dreyfus asks does Shrldlu with this system really understand owning? 
If it did it would realize its not part of a community in which owning makes
sense, in our culture computers can't own anything.
Therefore we can say that Shrdlu does not really understand what
it means to own something.
This argument is therefore a subclass of the syntax vs semantics discussion
which is out of the scope of this paper.
However it does expose a problem with the micro world approach.
The way ownership was implemented in this way is called a micro theory.
The theory would be something along the lines of:
"Ownership = All objects with my name on the ownership flag belong to me".
This then would be considered a particle, from which we later can generalize
or expand the concept of ownership.
Similarly to how natural sciences built up by studying isolated systems.
The problem is that there is no understanding of ownership at all
from which you can generalize, its defined as a primitive.
# TODO add reference to syntax vs semantics

# CLEARED
Another major issue Dreyfus had with the micro world approach was that the
programs that were produced often could not do anything outside of their world.
This was especially true for waltz's scene parser.
It would do simple pattern matching on scenes consisting of geometric objects.
However converting this methodology to recognize real world objects is a non
trivial problem.

# CLEARED
Copeland argues the deepest criticism on Shrdlu and the micro world approach is
the contribution it did to AI research "or lack thereof",
citing winograd himself cite:winograd1974, "its a dead end".
Although we think that saying micro worlds had no contribution to AI at all is
too harsh,
because the constrains may have been somewhat naive,
but the methodology itself could be useful.
This will be explained more thoroughly in the next chapters.

# TODO what replaced micro world research? Why did it stop?
* Could a micro world be use full?
# CLEARED
So perhaps micro worlds are not the end goal we should strive for in AI.
In this section we will discuss some other potential use cases for micro worlds,
while keeping in mind the criticism the approach got in the previous section.

# CLEARED
The work Honing 1993 cite:honing1993micro world mostly ignores existing
applications of micro world and just looks at the definition and the approach.
He was interested in formalizing musical knowledge and used the micro world
not as an end demonstration to his research but rather as an exploration methodology.
He argues that programming forces you into a different mindset,
and forces you to answer questions that you did not think of before.
Experimentation with the ad-hoc formalization can lead to new understandings
and lead to a better formalization.
But however he warns that having a functional program is far from having
a functional theory.

# CLEARED
So Honing used a micro world to test his formalization of musical knowledge,
and checked if it sounded right.
However we want to propose several other possible use cases of micro worlds.
Firstly lets consider ethics.
Often we have ethical dilemmas that don't make any real world sense,
but are still useful for the sake of ethics.
For example lets say you have a self driving car.
It can choose to either ride into 4 elderly people, 2 children or blow up the
car with the driver.
The common sense reply to this "dilemma" is that its completely unrealistic.
The care would have more choices than that you'd say.
However in the micro world approach we can change the world to be realistic
with respect to the dilemma.
Remember that in our definition a micro world doesn't need to work
the same as the real world.
Now you can put the program that drives the car in the micro world and force
it to make a decision, and evaluate if this is what you wanted.
The micro world approach has helped you to explore and evaluate if the
program complies with the ethics you desire.
What's even better is that you can automate this process for multiple dilemma's,
before you roll out and updated version into the wild.
The only hard part becomes deciding what the "right" answer is, but figuring
that out is out of the scope of this paper.

# CLEARED
In another scenario, lets say you want to build a autonomous robot.
However your budget is extremely tight,
therefore you don't want the program to trip over and break the hardware in
the first test run.
Again we can use a micro world approach to test the program.
Most parts these days already have 3d representation with help of programs
such as autocad.
In fact there are entire databases online available 
from which you can choose your 3d parts cite:parts_database.
So if your micro world would use only these parts, and have a somewhat
realistic physics engine, you could test with some confidence that it won't fall.
Testing the autonomous robot in a micro world could safe cost,
and what's even better, it could be exposed to ethical tests along the way.

* How complex does a micro world need to be for AI?
# TODO motivating why you would want to do this
# CLEARED
We humans, like to think of ourselves as a general intelligence.
By which we mean, we are massively adaptable.
So because humans are the only general intelligence's we know of,
we can assume any intelligence needs to have at least the same amount of inputs
and outputs as we have.
So how complex would a micro world need to be to stimulate the senses of a
program that had the same senses as we did?
Would we need to simulate the entire would?
Or would something more simple suffice?
In this section we'll try to answer these questions.

# CLEARED
Lets first analyze the data a human brain takes in.
This passes trough something which are commonly called "senses".
The "traditional" ones are:
Sight,
hearing,
taste,
smell
and touch.
Traditional because everyone learns about these in biology on high-school,
and they're kind off obvious.
Then there are the non-traditional ones such as:
Balance and acceleration,
Temperature,
proprioception (if you close your eyes you still know where your limbs are),
pain
and the internal senses such as hunger and pulmonary stretch receptors (your lungs).
There are more internal ones but I won't name them all,
since the names are very difficult to both understand and write.
We don't consider sustenance as input to the human brain,
because the experience of eating comes trough the senses.
The output the human brain produces on the other hand is a lot more simple:
Highly coordinated muscle contraction and relaxation.

# CLEARED
So we want to model all these senses and the single output into a micro world.
But wait,
here is an opportunity to avoid some of the criticism previous micro worlds got,
namely not being applicable to the real world.
If we somehow would create a program $A$ that could handle these inputs,
it would almost surely not get a human body to run in trough the real world.
So to make this micro world as a testing environment we should use real
parts to design the body for the program with.
That is to say, the micro world would provide the interface which the program
can use,
but this interface should be the same as one of the real parts.
Perhaps we could say that the program runs in a virtual machine.

# CLEARED
The senses we discussed should not be eyes and ears, but cameras and microphones.
So we don't talk about senses but sensors,
and our program should be able to handle the data from them.
The outputs on the other hand shouldn't be muscle contraction and relaxation,
but motor controls.
We could consider sounds as a separate output since the physics of
speech hasn't been figured out yet cite:perrier2003influences,
speech synthesis is figured out pretty well however.

# CLEARED
So there we have it, the only general intelligence we know of and all its inputs
reduced to sensors, motor controls and the program $A$.
Specifying what $A$ entails is out of the scope of this paper.
But we did implicitly assume that computers can think.

# CLEARED
Now the question is could we create a micro world that incorporates all these
sensors and still have a cohesive picture?
Well, not for all senses we observed earlier.
You can't buy a proprioception sensor on the market for one.
But is it possible in principle?
For things such as sight and hearing this is easily answerable with a yes.
For example an agent in a micro world could get every time unit a png image
with what he sees and an mp3 with what he hears.
However for taste, smell, touch and the other senses the answer is more difficult.
There are no standard ways of encoding these things,
or even finding sensors for them is difficult
(you don't see smell sensors everyday).
Another problem is that giving each agent all these senses every unit of time
will be slow,
for humans this time unit is at least 21 times per second for sight,
but it varies per sense.
There is hope for this approach however,
for one standards are not necessary,
you could just invent an encoding on the fly,
experimentation is one of the strong suits of the micro world approach,
the theory shouldn't not be forgotten however.
Secondly the time in the micro world can move slower than time in the real world.

# CLEARED
Why would you want to do this?
Why do we need all these sensors?
Can't we just leave out proprioception to make our lives easier as AI researchers?
Well, the only general intelligence we know of has all these senses.
If we want to develop a system that could emulate human cognition,
it should have the same information available as humans.
If you leave something out it is going to be more alien in its thinking process
than us, because it will perceive the same situation different
than us and thus come to different conclusions.

# CLEARED
You may argue that the approach I described hardly qualifies as a micro world
anymore.
But you would be wrong.
By doing this we don't need to put the entire world into the machine,
we don't care for example about atom movement or micro organisms.
We can just ignore these things for the most part as long as they are
consistent around the inhabitants.

# CLEARED
Now we've defined a micro world that can possibly host an artificial general
intelligence (AGI) we can have some fun with it.
Lets say that program $A$ is suspected of being an AGI.
The first obstacle it has to overcome is of course a CAPTCHA cite:von2004telling.
Then we can let it play chess, let it do some archery and drive a car.
Because it lives in a micro world we can throw an arbitrary number of challenges
against it to ensure that its indeed massively adaptable.
Then finally we could also put it onto several ethical tests to ensure it
behaves properly.
Whats even more important is that this entire process could be automated.
The only thing we need to make sure is that all the scenario's are pass-able by
most humans.

# CLEARED
Another advantage of this approach is that programs can be moved easily from
micro world into real world robot.
But to start developing one almost no investment is required.
Copying the micro world is free.

# CLEARED
If we strictly separate the agent from the world in such a say that it can
only interact trough movement or speech,
and receive information trough senses we're no longer talking about an agent
architecture anymore.
We're talking about an artificial creature.

# CLEARED
Something else what you can do with this architecture is that the creatures
could have the ability to imagine a micro world in their thought process.
So if it deliberates its next move it could start an instance of the 
micro world (or how it imagines it) and then see how certain actions play
out.

* Conclusion
# CLEARED
We've discussed what micro worlds are and why people got excited about them.
Then we discussed the criticism they got.
If we say that Micro worlds are not results, Then we can start exploring what
they are.
They're just experimentation tools to gain either deeper understanding of a
system or test it.
Several use cases have been discussed.
Finally we've discussed what a micro world would need to simulate for it to be
able to host a program that could be a general intelligence,
by observing closely what inputs and outputs we humans have.
Then we observed possible advantages of such an approach.

<<bibliography link>>

bibliographystyle:unsrt
bibliography:refs.bib

